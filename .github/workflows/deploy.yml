name: Deploy Element UI X

on:
  push:
    branches: [master]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'packages/element-ui-x/package.json'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'packages/element-ui-x/package.json'
  pull_request_target:
    types: [closed]
    branches: [master]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'packages/element-ui-x/package.json'
  workflow_dispatch:
    inputs:
      deploy_target:
        description: 'ÈÉ®ÁΩ≤ÁõÆÊ†á'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - docs
          - examples

jobs:
  sync-version:
    name: ÂêåÊ≠•ÁâàÊú¨Âè∑
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'push' && contains(github.event.head_commit.modified, 'packages/element-ui-x/package.json')) ||
      github.event_name == 'workflow_dispatch'
    outputs:
      version-changed: ${{ steps.check-version.outputs.changed }}
      new-version: ${{ steps.check-version.outputs.version }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Check and sync version
        id: check-version
        run: |
          MAIN_VERSION=$(node -p "require('./packages/element-ui-x/package.json').version")
          echo "Main package version: $MAIN_VERSION"

          DOCS_VERSION=$(node -p "require('./docs/package.json').dependencies['vue-element-ui-x']" | sed 's/[\^~]//g')
          echo "Docs package version: $DOCS_VERSION"

          if [ "$MAIN_VERSION" != "$DOCS_VERSION" ]; then
            echo "Version mismatch detected, syncing..."
            
            node -e "
              const fs = require('fs');
              const docsPackage = JSON.parse(fs.readFileSync('docs/package.json', 'utf8'));
              docsPackage.dependencies['vue-element-ui-x'] = '^$MAIN_VERSION';
              fs.writeFileSync('docs/package.json', JSON.stringify(docsPackage, null, 2) + '\n');
              console.log('Updated docs package.json to version ^$MAIN_VERSION');
            "
            
            git add docs/package.json
            git commit -m "docs: sync vue-element-ui-x version to ^$MAIN_VERSION" || echo "No changes to commit"
            git push origin ${{ github.ref_name }} || echo "Nothing to push"
            
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "version=$MAIN_VERSION" >> $GITHUB_OUTPUT
          else
            echo "Versions are already in sync"
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "version=$MAIN_VERSION" >> $GITHUB_OUTPUT
          fi

  deploy-docs:
    name: ÈÉ®ÁΩ≤ÊñáÊ°£Á´ô
    needs: [sync-version]
    if: |
      always() && 
      (needs.sync-version.result == 'success' || needs.sync-version.result == 'skipped') &&
      (${{ github.event_name != 'workflow_dispatch' || github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'docs' }})
    runs-on: ubuntu-latest
    env:
      VUEPRESS_GA_ID: ${{ secrets.VUEPRESS_GA_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Pull latest changes
        if: needs.sync-version.outputs.version-changed == 'true'
        run: git pull origin ${{ github.ref_name }}

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: docs
        run: |
          npm install

      - name: Build documentation
        working-directory: docs
        run: npm run build

      - name: Deploy to Vercel
        id: deploy-docs
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_DOCS }}
          working-directory: ./docs
          vercel-args: ${{ github.event_name == 'push' && '--prod' || '' }}

      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            let body = 'üìñ ÊñáÊ°£È¢ÑËßà: ${{ steps.deploy-docs.outputs.preview-url }}';
            if ('${{ needs.sync-version.outputs.version-changed }}' === 'true') {
              body += '\nüîÑ Â∑≤Ëá™Âä®ÂêåÊ≠•ÁâàÊú¨Âè∑Âà∞: ${{ needs.sync-version.outputs.new-version }}';
            }
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            })

  deploy-examples:
    name: ÈÉ®ÁΩ≤Á§∫‰æãÈ°πÁõÆ
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'examples' }}
    runs-on: ubuntu-latest
    env:
      VUEPRESS_GA_ID: ${{ secrets.VUEPRESS_GA_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        working-directory: examples
        run: |
          npm install

      - name: Build
        working-directory: examples
        run: npm run build

      - name: Deploy to Vercel
        id: deploy-examples
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_EXAMPLES }}
          working-directory: ./examples
          vercel-args: ${{ github.event_name == 'push' && '--prod' || '' }}

      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üöÄ Á§∫‰æãÈ¢ÑËßà: ${{ steps.deploy-examples.outputs.preview-url }}'
            })
