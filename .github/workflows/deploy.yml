name: Deploy Element UI X

on:
  push:
    branches: [master]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'packages/element-ui-x/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches: [master]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'packages/element-ui-x/**'
  pull_request_target:
    types: [closed]
    branches: [master]
    paths:
      - 'docs/**'
      - 'examples/**'
      - 'packages/element-ui-x/**'
  workflow_dispatch:
    inputs:
      deploy_target:
        description: '部署目标'
        required: true
        default: 'all'
        type: choice
        options:
          - all
          - docs
          - examples

jobs:
  deploy-docs:
    name: 部署文档站
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'docs' }}
    runs-on: ubuntu-latest
    env:
      VUEPRESS_GA_ID: ${{ secrets.VUEPRESS_GA_ID }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure Git
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "github-actions@github.com"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get package version and replace dependencies
        id: version-setup
        run: |
          # 获取主包版本号
          MAIN_VERSION=$(node -p "require('./packages/element-ui-x/package.json').version")
          echo "Main package version: $MAIN_VERSION"
          echo "version=$MAIN_VERSION" >> $GITHUB_OUTPUT

          # 备份原始的package.json文件
          cp docs/package.json docs/package.json.backup

          # 临时替换文档站点的依赖为NPM版本
          echo "Replacing docs package.json dependency..."
          node -e "
            const fs = require('fs');
            const docsPackage = JSON.parse(fs.readFileSync('docs/package.json', 'utf8'));
            
            // 检查是否使用本地依赖
            if (docsPackage.dependencies['vue-element-ui-x'].startsWith('file:')) {
              console.log('Found local dependency, replacing with NPM version...');
              docsPackage.dependencies['vue-element-ui-x'] = '^$MAIN_VERSION';
              fs.writeFileSync('docs/package.json', JSON.stringify(docsPackage, null, 2) + '\n');
              console.log('Replaced with version: ^$MAIN_VERSION');
            } else {
              console.log('Already using NPM version');
            }
          "

          # 显示修改后的依赖
          echo "Updated docs dependency:"
          node -p "require('./docs/package.json').dependencies['vue-element-ui-x']"

      - name: Install docs dependencies
        working-directory: docs
        run: |
          echo "Installing dependencies with NPM version..."
          npm install

      - name: Build documentation
        working-directory: docs
        run: npm run build

      - name: Restore original package.json
        run: |
          echo "Restoring original docs package.json..."
          mv docs/package.json.backup docs/package.json
          echo "Restored to:"
          node -p "require('./docs/package.json').dependencies['vue-element-ui-x']"

      - name: Deploy to Vercel
        id: deploy-docs
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_DOCS }}
          working-directory: ./docs
          vercel-args: ${{ github.event_name == 'push' && '--prod' || '' }}

      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '📖 文档预览: ${{ steps.deploy-docs.outputs.preview-url }}\n🔄 使用NPM版本: ${{ steps.version-setup.outputs.version }}'
            })

  deploy-examples:
    name: 部署示例项目
    if: ${{ github.event_name != 'workflow_dispatch' || github.event.inputs.deploy_target == 'all' || github.event.inputs.deploy_target == 'examples' }}
    runs-on: ubuntu-latest
    env:
      VUEPRESS_GA_ID: ${{ secrets.VUEPRESS_GA_ID }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Get package version and replace dependencies
        id: version-setup
        run: |
          # 获取主包版本号
          MAIN_VERSION=$(node -p "require('./packages/element-ui-x/package.json').version")
          echo "Main package version: $MAIN_VERSION"
          echo "version=$MAIN_VERSION" >> $GITHUB_OUTPUT

          # 备份原始的package.json文件
          cp examples/package.json examples/package.json.backup

          # 临时替换示例项目的依赖为NPM版本
          echo "Replacing examples package.json dependency..."
          node -e "
            const fs = require('fs');
            const examplesPackage = JSON.parse(fs.readFileSync('examples/package.json', 'utf8'));
            
            // 检查是否使用本地依赖
            if (examplesPackage.dependencies['vue-element-ui-x'].startsWith('file:')) {
              console.log('Found local dependency, replacing with NPM version...');
              examplesPackage.dependencies['vue-element-ui-x'] = '^$MAIN_VERSION';
              fs.writeFileSync('examples/package.json', JSON.stringify(examplesPackage, null, 2) + '\n');
              console.log('Replaced with version: ^$MAIN_VERSION');
            } else {
              console.log('Already using NPM version');
            }
          "

          # 显示修改后的依赖
          echo "Updated examples dependency:"
          node -p "require('./examples/package.json').dependencies['vue-element-ui-x']"

      - name: Install dependencies
        working-directory: examples
        run: |
          echo "Installing dependencies with NPM version..."
          npm install

      - name: Build
        working-directory: examples
        run: npm run build

      - name: Restore original package.json
        run: |
          echo "Restoring original examples package.json..."
          mv examples/package.json.backup examples/package.json
          echo "Restored to:"
          node -p "require('./examples/package.json').dependencies['vue-element-ui-x']"

      - name: Deploy to Vercel
        id: deploy-examples
        uses: amondnet/vercel-action@v25
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_EXAMPLES }}
          working-directory: ./examples
          vercel-args: ${{ github.event_name == 'push' && '--prod' || '' }}

      - name: Comment deployment URL
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 示例预览: ${{ steps.deploy-examples.outputs.preview-url }}\n🔄 使用NPM版本: ${{ steps.version-setup.outputs.version }}'
            })
